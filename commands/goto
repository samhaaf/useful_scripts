#!/bin/bash

# Check if at least one argument is provided
if [ "$#" -lt 1 ]; then
  echo "Usage: goto <command> [-c code] [-t]"
  exit 1
fi

# Default values
execute_code=false
tunnel=false
code=""

# Parse flags and arguments
while [[ "$#" -gt 0 ]]; do
  case "$1" in
    -c|--code)
      execute_code=true
      shift
      code="$1"
      shift
      ;;
    -t|--tunnel)
      tunnel=true
      shift
      ;;
    *)
      cmd_arg="$1"
      shift
      ;;
  esac
done

# Execute the command and store the result
result="$(eval "$cmd_arg")"

# Extract user, IP address, and optionally PEM file path
IFS=$'\n'
result_info=($result)
user_ip="${result_info[0]}"
pem_path=""
if [ "${#result_info[@]}" -gt 1 ]; then
    pem_path="${result_info[1]}"
fi

ssh_options=""
if [ -n "$pem_path" ]; then
    ssh_options="-i $pem_path"
fi

if $execute_code; then
  # Execute arbitrary code across the connection
  ssh $ssh_options "$user_ip" "$code"
elif $tunnel; then
  # Turn the connection into a tunnel
  echo "Please provide source port, destination address, and destination port as 'source_port:dest_address:dest_port':"
  read tunnel_info
  ssh $ssh_options -L "$tunnel_info" "$user_ip"
else
  # SSH using the provided PEM file if available, else use public key
  ssh $ssh_options "$user_ip"
fi
